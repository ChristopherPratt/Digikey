<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCADmAQkDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACs3xF4i03wno11qurXcdjYWyF5ZpWwABVfxh4w0jwH4fu9a1u9jsdPtULySyMB07D1Nfkp+1x+
        2Fqvx61iXS9Lll0/whbuRFbq2DcEfxP6/SgD3n4mf8FTDpviiW18H+HotQ0iGTYbq7cq0oB5IA6V7N8F
        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
</value>
  </data>
</root>